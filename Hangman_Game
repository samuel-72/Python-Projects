# 
# Hangman game
#

import random
import string

WORDLIST_FILENAME = "D:\GRADUATE SCHOOL\Python Programs\words.txt"

def loadWords():
    """
    Returns a list of valid words. Words are strings of lowercase letters.
    
    Depending on the size of the word list, this function may
    take a while to finish.
    """
    print "Loading word list from file..."
    # inFile: file
    inFile = open(WORDLIST_FILENAME, 'r', 0)
    # line: string
    line = inFile.readline()
    # wordlist: list of strings
    wordlist = string.split(line)
    print "  ", len(wordlist), "words loaded."
    return wordlist

def chooseWord(wordlist):
    """
    wordlist (list): list of words (strings)

    Returns a word from wordlist at random
    """
    return random.choice(wordlist)


def isWordGuessed(secretWord, lettersGuessed):
    '''
    secretWord: String, the word the user is guessing
    lettersGuessed: String, what letters have been guessed so far
    returns: boolean, True if all the letters of secretWord are in lettersGuessed;
      False otherwise
    '''
    # FILL IN YOUR CODE HERE...
    for char in secretWord:
        if char not in lettersGuessed:
            return False
    return True



def getGuessedWord(secretWord, lettersGuessed):
    '''
    secretWord: String, the word the user is guessing
    lettersGuessed: String, what letters have been guessed so far
    returns: String, comprised of letters and underscores that represents
      what letters in secretWord have been guessed so far.
    '''
    # FILL IN YOUR CODE HERE...
    ans = ''
    for char in secretWord:
        if char in lettersGuessed:
            ans += char
        else:
            ans += '_'
    return ans


def getAvailableLetters(lettersGuessed):
    '''
    lettersGuessed: String, what letters have been guessed so far
    returns: String, comprised of letters that represents what letters have not
      yet been guessed.
    '''
    # FILL IN YOUR CODE HERE...
    global letters
    
    for char in lettersGuessed:
        letters = letters.replace(char,'')
    return letters
    

def hangman(secretWord):
    '''
    secretWord: string, the secret word to guess.

    Starts up an interactive game of Hangman.

    * At the start of the game, let the user know how many 
      letters the secretWord contains.

    * Ask the user to supply one guess (i.e. letter) per round.

    * The user receives feedback immediately after each guess 
      about whether their guess appears in the computers word.

    * After each round, display to the user the 
      partially guessed word so far, as well as letters that the 
      user has not yet guessed.
      
    '''
    # FILL IN CODE HERE...

    global lettersGuessed, guesses

    print "-------------"
    print "You have ",guesses, " left."
    print "Available Letters : ",getAvailableLetters(lettersGuessed)
    userInput = str(raw_input("Please guess a letter: "))
    while (userInput in lettersGuessed):
        userInput = str(raw_input("The letter you guessed has already been guessed by you, so please guess another letter: "))

    lettersGuessed += userInput
    
    if (userInput in secretWord):
        print "Good Guess: ", getGuessedWord(secretWord, lettersGuessed)
    else:
        print "Oops! That letter is not in my word: ", getGuessedWord(secretWord, lettersGuessed)
        guesses -= 1        

    print "-------------"
    
    if (isWordGuessed(secretWord, lettersGuessed)):
        print "Congratulations, you won!"
    elif (guesses < 1):
        print "Sorry, you ran out of guesses. The word was ",secretWord,"."
    else:
        hangman(secretWord)
        

# Load the list of words into the variable wordlist
# so that it can be accessed from anywhere in the program
wordlist = loadWords()


secretWord = chooseWord(wordlist).lower()

guesses = 8
letters = 'abcdefghiklmnopqrstuvwxyz'
lettersGuessed = ''

print "Welcome to the game, Hangman!"
print "I am thinking of a word that is ",len(secretWord)," letters long."


hangman(secretWord)
